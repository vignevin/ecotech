---
title: "Disease assessment"
format: html
---

## Disease Assessment

207 experimental units means a lot of disease observation to do ! what is the best compromise between time spent and precision of observations ?

### Manual scouting

In spring, at phenological stage BBCH 53, a mapping of "flag shoots" symptoms of powdery mildew was realized.

At BBCH 77, we did 2 manual assessement of powdery mildew , one following EPPO standard and the other one in a "FAST" mode:

+---------------------------------+--------------------------------------------+
| EPPO Standard                   | FAST assessment                            |
+=================================+============================================+
| \% of bunch with powdery mildew | Class \[0-5\] of powdery mildew on bunches |
+---------------------------------+--------------------------------------------+
| ![](EPPO.png){width="336"}      | ![](FAST.png){width="275"}                 |
+---------------------------------+--------------------------------------------+
| -   81 observed units (40%)     | -   207 observed units (on both sides)     |
| -   50 bunches/unit : 4050 obs  | -   10 vinestocks/unit : 4140 observation  |
| -   9 persons                   | -   6 persons                              |
| -   27 working hours            | -   18 working hours                       |
| -   20 min/unit                 | -   5.2 min/unit (4 times faster)          |
+---------------------------------+--------------------------------------------+

### AI assessment

We also tested the recognition by artificial intelligence of **downy mildew** symptoms on images taken mid-july by drone in partnership with the company [Chouette](https://www.chouette.vision/).

![Downy mildiew assessment using AI](Chouette.png)

## Disease mapping

Disease assessments can be viewed on the @fig-map_disease below.

```{r}
#| echo: false
#| warning: false
#| fig-cap: "Map of disease assessment 2023"
#| label: fig-map_disease

## data repo
data_repo_path <- "C:\\Users\\xdelpuech\\OneDrive - vignevin.com\\AE3\\ProjetsEnCours\\BIOSPRAYTECH\\03_DATA\\biospraytech2023\\data"

### load map data
library(sf) # (Spatial Feature) est dédié à la manipulation, la transformation et l’analyse de données spatiales. A la manière du Tidyverse, il combine les fonctionnalités de {sp}, {rgeos} et {rgdal} dans un package.
library(tidyverse) # manipulation des données
# load data ---------------------------------------------------------------
xpdesign <- sf::read_sf(paste0(data_repo_path,"/carto/xpdesign2023-05-11.shp"))
# on exclu les segments de la première et de la dernière section pour ne garder que les 2 segments centraux
xpdesign_core <- xpdesign %>%
  filter(expe == 1) %>%
  group_by(PU) %>%
  filter(n_section > min(n_section), n_section < max(n_section)) %>%
  ungroup()

block <- xpdesign %>%
  filter(!is.na(bloc)) %>%
  mutate(block = paste("block",bloc)) %>%
  group_by(block) %>%
  summarize(block=unique(block)) %>%
  sf::st_convex_hull()

## drapeaux
flagShoots <- sf::read_sf(paste0(data_repo_path,"/carto/drapeaux2023.shp"))

## comptage C2
dataC2 <- read.csv(paste0(data_repo_path,"/data_C2.csv"))
data_all <- merge(xpdesign_core,dataC2)

# moyenne des 2 faces par PU 
EPPO <- data_all %>%
  group_by(PU,trt,bloc)%>%
  summarise(PM_Percentage=mean(g_oidium,na.rm=T))

### comptage Q1
dataQ1 <- read.csv(paste0(data_repo_path,"/data_Q1.csv"))
data_all <- merge(xpdesign_core,dataQ1)

# moyenne des 2 faces par PU 
FAST <- data_all %>%
  group_by(PU,trt,bloc)%>%
  summarise(PM_Class=median(q_oidium,na.rm=T))

## mildiou drone
downyMildew_AI <- sf::read_sf(paste0(data_repo_path,"/carto/Mildiou tâche d'huile_10-07-2023_10-13-35.shp"))

library(tmap)
tmap_mode("plot")
mymap <- tm_shape(EPPO) + tm_lines(col = "PM_Percentage",size=2) +
  tm_shape(block) + tm_polygons(alpha=0,lwd=1,col="grey") + tm_text("block") +
  tm_shape(FAST) + tm_lines(col = "PM_Class",size=2) +
  tm_shape(flagShoots) + tm_dots(col = "red",legend.show = TRUE) +
  tm_shape(downyMildew_AI) + tm_dots(col="orange",legend.show = TRUE) +
  tm_basemap("OpenStreetMap.France",alpha=0.2) +
  tm_view(set.zoom.limits = c(18,22))
 
mymap <- tmap::tmap_leaflet(mymap) 
widgetframe::frameWidget(mymap,width="100%")

    
```

![](logoUMT.png)
